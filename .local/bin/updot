#!/usr/bin/env sh

out() { printf "$@\\n" ;}
error() { out "ERROR: $@" ; } >&2
msg() { out "==> $@" ; }
die() { error "$@"; exit 1; }

pacman --version >/dev/null 2>&1 && carbs="carbs" && alias install="sudo pacman -S --noconfirm --needed" && defdot="git://git.ckyln.com/dotfiles"
xbps-install --version >/dev/null 2>&1 && carbs="vcarbs" && alias install="sudo xbps-install -y" && defdot="git://git.ckyln.com/vdotfiles"

while getopts ':p::r::P:d' flag; do
	case $flag in
		P) [ -n "$carbs" ] && curl -sLo "$OPTARG" https://git.ckyln.com/raw/${carbs}/progs.csv && exit || die 'Could not download progs.csv' ;;
		p) [ -e "$OPTARG" ] && progs=$OPTARG || die 'Could not find progs.csv file' ;;
		r) git ls-remote "$OPTARG" >/dev/null 2>&1 && dotfiles=$OPTARG || die 'Could not find repo' ;;
		d) dotonly=1 ;;
		:) die "$OPTARG option requires argument" ;;
		?) die "invalid option -- $OPTARG" ;;
	esac
done

[ -z "$dotonly" ] && [ -z "$carbs" ] && \
	die "It seems like you don't use Arch Linux or Void Linux\\nYou might want to run updot -d"
[ -z "$dotfiles" ] && dotfiles="${defdot-git://git.ckyln.com/dotfiles}"
[ -z "$progs" ] && curl -sLo /tmp/progs.csv https://raw.githubusercontent.com/cemkeylan/carbs/master/progs.csv && progs="/tmp/progs.csv"

welcomepage() {
	clear
	cat <<EOF
================================================== 
===     ======  =====       ===      =====      == 
==  ===  ====    ====  ====  ==  ===  ===  ====  = 
=  =========  ==  ===  ====  ==  ====  ==  ====  = 
=  ========  ====  ==  ===   ==  ===  ====  ====== 
=  ========  ====  ==      ====      =======  ==== 
=  ========        ==  ====  ==  ===  ========  == 
=  ========  ====  ==  ====  ==  ====  ==  ====  = 
==  ===  ==  ====  ==  ====  ==  ===  ===  ====  = 
===     ===  ====  ==  ====  ==      =====      == 
================================================== 

Welcome to Cem's Auto-Rice Bootstrapping Script!

Dotfiles Repository: $dotfiles

WARNING:
This update might break your personal changes, so 
it is highly recommended that you backup your .config
before you continue.

EOF
printf "Proceed? (y/N) "
read ans
[ "$ans" = "y" ] || die "User exited"
}

makeinstall() {
	cd /tmp
	dir="$(mktemp -d)"
	git clone "$1" "$dir" || die "Could not clone git repo"
	cd "$dir"
	make || die "Could not build $1"
	sudo make install || die "Could not install $1"
}

installcsv() {\
	[ -e $progs ] || die "Could not retrieve progs.csv"
	while IFS=, read -r src name
	do
		case $src in
			y)
				out "Installing $name"
				yay -S --noconfirm --needed "$name" >/dev/null || die "Could not install $name"
				msg "Installed $name" ;;
			g)
				out "Installing $name"
				makeinstall "$name" || die "Could not install $name"
				msg "Installed $name" ;;
			*)
				out "Installing $name"
				install "$name" >/dev/null || die "Could not install $name"
				msg "Installed $name" ;;
		esac
	done < $progs
}

dotfilesinstall() {
	cd /tmp || return 1
	dir="$(mktemp -d)"
	git clone --recursive --depth 1 "$1" "$dir/repo" || return 1
	cp -rfT "$dir/repo" "$HOME" || die "Could not copy repository to your home directory"
	rm "$HOME"/README* "$HOME"/LICENSE "$HOME"/.git -rf "$HOME"/screenshots
}

finalize() {
printf "Carbs update script is finished\\n\\n"
}

welcomepage
[ -z $dotonly ] && installcsv
dotfilesinstall $dotfiles || die "Could not install dotfiles"
finalize
