#!/usr/bin/env sh

out() { printf "$@\\n" ;}
error() { out "ERROR: $@" ; } >&2
msg() { out "==> $@" ; }
die() { error "$@"; exit 1; }

usage() {
	cat <<EOF
usage: ${0##*/} [options]

  Options:
    -r <repo url>     Use an alternative dotfiles repo
    -p <progs.csv>    Use an alternative progs.csv file (must be local)
    -P <filename>     Download progs.csv and exit
    -d		      Update dotfiles only

    -h/--help         Print this help message

Updot updates the dotfiles and installs the current progs.csv

EOF
}


if [ "$1" = "-h" ] || [ "$1" = "--help" ] ; then
	usage
	exit
fi

while getopts ':p::r::P:d' flag; do
	case $flag in
		P) curl -sLo $OPTARG https://raw.githubusercontent.com/cemkeylan/carbs/master/progs.csv && exit || die 'Could not download progs.csv' ;;
		p) [ -e $OPTARG ] && progs=$OPTARG || die 'Could not find progs.csv file' ;;
		r) git ls-remote $OPTARG >/dev/null 2>&1 && dotfiles=$OPTARG || die 'Could not find repo' ;;
		d) dotonly=1 ;;
		:) die '%s: option requires argument -- '\''%s'\' "${0##*/}" "$OPTARG" ;;
		?) die '%s: invalid option -- '\''%s'\' "${0##*/}" "$OPTARG" ;;
	esac
done

[ -z $dotfiles ] && dotfiles="git://git.ckyln.com/dotfiles"
[ -z $progs ] && curl -sLo /tmp/progs.csv https://raw.githubusercontent.com/cemkeylan/carbs/master/progs.csv && progs="/tmp/progs.csv"

welcomepage() {
	clear
	cat <<EOF
================================================== 
===     ======  =====       ===      =====      == 
==  ===  ====    ====  ====  ==  ===  ===  ====  = 
=  =========  ==  ===  ====  ==  ====  ==  ====  = 
=  ========  ====  ==  ===   ==  ===  ====  ====== 
=  ========  ====  ==      ====      =======  ==== 
=  ========        ==  ====  ==  ===  ========  == 
=  ========  ====  ==  ====  ==  ====  ==  ====  = 
==  ===  ==  ====  ==  ====  ==  ===  ===  ====  = 
===     ===  ====  ==  ====  ==      =====      == 
================================================== 

Welcome to Cem's Auto-Rice Bootstrapping Script!

WARNING:
This update might break your personal changes, so 
it is highly recommended that you backup your .config
before you continue.

EOF
printf "Proceed? (y/N) "
read ans
[ "$ans" = "y" ] || die "User exited"
}

makeinstall() {
	cd /tmp
	dir="$(mktemp -d)"
	git clone $1 $dir || die "Could not clone git repo"
	cd $dir
	make || die "Could not build $1"
	sudo make install || die "Could not install $1"
}

installcsv() {\
	[ -e $progs ] || die "Could not retrieve progs.csv"
	while IFS=, read -r src name
	do
		case $src in
			y)
				out "Installing $name"
				yay -S --noconfirm --needed $name >/dev/null || die "Could not install $name"
				msg "Installed $name" ;;
			g)
				out "Installing $name"
				makeinstall $name || die "Could not install $name"
				msg "Installed $name" ;;
			*)
				out "Installing $name"
				sudo pacman -S --noconfirm --needed $name >/dev/null || die "Could not install $name"
				msg "Installed $name" ;;
		esac
	done < $progs
}

dotfilesinstall() {
	cd /tmp
	dir="$(mktemp -d)"
	git clone --recursive --depth 1 $1 $dir/repo
	cp -rfT $dir/repo $HOME
	rm $HOME/README* $HOME/LICENSE $HOME/.git -rf $HOME/screenshots
}

finalize() {
printf "Carbs update script is finished\\n\\n"
}

welcomepage
[ -z $dotonly ] && installcsv
dotfilesinstall $dotfiles
finalize
